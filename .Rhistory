unique(tfs_pfla_motif2factors)
unique(pfla_tfs_motif2factors)
unique(pfla_tfs_motif2factors$class)
View(test)
grep("[Rr}[Xx][Rr]", pfla_tfs_motif2factors$class)
unique(pfla_tfs$class)
topclasses <-
read.table(
file = "assets/top_tf_classes.txt"
)
topclasses <-
read.table(
file = "assets/top_tf_classes.txt"
)[,1]
topclasses <-
read.table(
file = "assets/top_tf_classes.txt"
)[,1]
topclasses_col <-
setNames(
c(
"#e4eeb9",
"#96e88e",
"#50cc83",
"#9ce5df",
"#6dabd4",
"#878cbc",
"#5a5a82",
"#2f5685",
"#5a799a",
"#8d909b",
"#a4a3a2",
"#a55297",
"#f6afba",
"#b92f7d",
"#f38d97",
"#e16265",
"#ff9b7e",
"#ffc694",
"#ffebb5",
"#ffd966"
),
topclasses
)
plot(1:length(topclasses_col),1:length(topclasses_col),pch=".")
text(1:length(topclasses_col),1:length(topclasses_col),topclasses_col,col=topclasses_col)
plot(1:length(topclasses_col),1:length(topclasses_col),pch=".")
text(1:length(topclasses_col),1:length(topclasses_col),names(topclasses_col),col=topclasses_col)
otherclasses <- pfla_tfs$class[!(pfla_tfs$class %in% topclasses)]
otherclasses <- unique(pfla_tfs$class)[!(unique(pfla_tfs$class) %in% topclasses)]
set.seed(121)
colors_other_tfclasses <- data.frame(
tf=otherclasses,
col=sample(colors(),length(otherclasses))
)
colors_other_tfclasses <-
setNames(
sample(colors(),length(otherclasses)),
otherclasses
)
plot(1:length(topclasses_col),1:length(topclasses_col),pch=".")
plot(1:length(otherclasses_col),1:length(otherclasses_col),pch=".")
otherclasses_col <-
setNames(
sample(colors(),length(otherclasses)),
otherclasses
)
plot(1:length(otherclasses_col),1:length(otherclasses_col),pch=".")
text(1:length(otherclasses_col),1:length(otherclasses_col),names(otherclasses_col),col=otherclasses_col)
save(
pfla_tfs,
blan_tfs,
spur_tfs,
topclasses,
topclasses_col,
otherclasses,
otherclasses_col,
file = "outputs/rda/TF_annotation.rda"
)
ncol(pfla_rna_dev)
dir <- '/home/ska/aperpos/projects/ptychodera_cisreg_development/'
fcha <- function(){ gsub("-","",Sys.Date()) }
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = dir)
options(scipen=999)
Sys.setenv(VROOM_CONNECTION_SIZE=5000072)
pfla_tfs_rna_dev <-
pfla_cpm[
rownames(pfla_rna_dev) %in% pfla_tfs$id,
1:17
]
pfla_tfs_rna_dev <-
pfla_rna_dev[
rownames(pfla_rna_dev) %in% pfla_tfs$id,
1:17
]
colnames(pfla_tfs_rna_dev) <- colnames(pfla_tfs_rna_dev)[1:17]
pfla_tfs_rna_dev <- as.data.frame(pfla_tfs_rna_dev)
View(pfla_tfs_rna_dev)
source('~/projects/ptychodera_cisreg_development/code/r_code/r_general/colors.R')
source('~/projects/ptychodera_cisreg_development/code/r_code/r_general/colors.R')
#Color palette for heatmap of TF-TF Spearman correlation
tfs_sp_hm_col <- colorRamp2(
c( # breaks, clipped
seq(-0.4,0.2,len=10),
seq(0.3,0.5,len=10)
),
colorRampPalette( # colors
rev(brewer.pal(7,"RdYlBu"))
)(20)
)
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c(1:6,6.5), # breaks, clipped
rev(sequential_hcl(7,"YlGnBu")) # colors
)
View(nc)
clu_method <- "ward.D2"
# The Heatmaps themselves
plei_cor_hm <- Heatmap(
name="Spearman",
cor(
t(pfla_tfs_rna_dev),
method="sp" # Spearman correlation
),
clustering_method_columns = clu_method,
clustering_method_rows = clu_method,
col=tfs_sp_hm_col,
show_row_names = FALSE,
show_column_names = FALSE
)
View(pfla_tfs_rna_dev)
# The Heatmaps themselves
plei_cor_hm <- Heatmap(
name="Spearman",
cor(
t(pfla_tfs_rna_dev[,1:16]),
method="sp" # Spearman correlation
),
clustering_method_columns = clu_method,
clustering_method_rows = clu_method,
col=tfs_sp_hm_col,
show_row_names = FALSE,
show_column_names = FALSE
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16], # +2 for visualisation purposes
col=tfs_expr_hm_col,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16], # +2 for visualisation purposes
# col=tfs_expr_hm_col,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16], # +2 for visualisation purposes
# col=tfs_expr_hm_col,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
# top_annotation=devstages_ha_columns
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16], # +2 for visualisation purposes
col=tfs_expr_hm_col,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns()
)
draw(plei_expr_zsco_hm)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16]+2, # +2 for visualisation purposes
col=tfs_expr_hm_col,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns()
)
draw(plei_expr_zsco_hm)
draw(plei_cor_hm)
#Color palette for heatmap of TF-TF Spearman correlation
tfs_sp_hm_col <- colorRamp2(
c( # breaks, clipped
seq(-0.5,0,len=10),
seq(0,0.5,len=10)
),
colorRampPalette( # colors
rev(brewer.pal(7,"RdYlBu"))
)(20)
)
min(pfla_tfs_rna_dev)
min(pfla_tfs_rna_dev[,1:16])
max(pfla_tfs_rna_dev[,1:16])
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c(-3,3), # breaks, clipped
rev(sequential_hcl(7,"YlGnBu")) # colors
)
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c(-3,3), # breaks, clipped
rev(sequential_hcl(6,"YlGnBu")) # colors
)
c(-3:3)
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c(-3:3), # breaks, clipped
rev(sequential_hcl(7,"YlGnBu")) # colors
)
draw(plei_expr_zsco_hm)
# The Heatmaps themselves
plei_cor_hm <- Heatmap(
name="Spearman",
cor(
t(pfla_tfs_rna_dev[,1:16]),
method="sp" # Spearman correlation
),
clustering_method_columns = clu_method,
clustering_method_rows = clu_method,
col=tfs_sp_hm_col,
show_row_names = FALSE,
show_column_names = FALSE
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16]+2, # +2 for visualisation purposes
col=tfs_expr_hm_col,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns()
)
draw(plei_expr_zsco_hm)
draw(plei_cor_hm)
#Color palette for heatmap of TF-TF Spearman correlation
tfs_sp_hm_col <- colorRamp2(
c( # breaks, clipped
seq(-0.7,0,len=10),
seq(0,0.7,len=10)
),
colorRampPalette( # colors
rev(brewer.pal(7,"RdYlBu"))
)(20)
)
# The Heatmaps themselves
plei_cor_hm <- Heatmap(
name="Spearman",
cor(
t(pfla_tfs_rna_dev[,1:16]),
method="sp" # Spearman correlation
),
clustering_method_columns = clu_method,
clustering_method_rows = clu_method,
col=tfs_sp_hm_col,
show_row_names = FALSE,
show_column_names = FALSE
)
draw(plei_cor_hm)
#Color palette for heatmap of TF-TF Spearman correlation
tfs_sp_hm_col <- colorRamp2(
c( # breaks, clipped
seq(-0.1,0,len=10),
seq(0,0.1,len=10)
),
colorRampPalette( # colors
rev(brewer.pal(7,"RdYlBu"))
)(20)
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16]+2, # +2 for visualisation purposes
col=app_pal1,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns()
)
# The Heatmaps themselves
plei_cor_hm <- Heatmap(
name="Spearman",
cor(
t(pfla_tfs_rna_dev[,1:16]),
method="sp" # Spearman correlation
),
clustering_method_columns = clu_method,
clustering_method_rows = clu_method,
col=tfs_sp_hm_col,
show_row_names = FALSE,
show_column_names = FALSE
)
draw(plei_expr_zsco_hm)
draw(plei_cor_hm)
#Color palette for heatmap of TF-TF Spearman correlation
tfs_sp_hm_col <- colorRamp2(
c( # breaks, clipped
seq(-1,0,len=10),
seq(0,1,len=10)
),
colorRampPalette( # colors
rev(brewer.pal(7,"RdYlBu"))
)(20)
)
# The Heatmaps themselves
plei_cor_hm <- Heatmap(
name="Spearman",
cor(
t(pfla_tfs_rna_dev[,1:16]),
method="sp" # Spearman correlation
),
clustering_method_columns = clu_method,
clustering_method_rows = clu_method,
col=tfs_sp_hm_col,
show_row_names = FALSE,
show_column_names = FALSE
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16]+2, # +2 for visualisation purposes
col=app_pal2,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns()
)
draw(plei_expr_zsco_hm)
draw(plei_cor_hm)
plot(density(pfla_tfs_rna_dev))
plot(density(pfla_tfs_rna_dev[,1:16]))
plot(density(as.matrix(pfla_tfs_rna_dev[,1:16])))
?sequential_hcl
hcl_palettes
hcl_palettes()
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c(-3:3), # breaks, clipped
rev(sequential_hcl(7,"Red-Green")) # colors
)
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c(-3:3), # breaks, clipped
rev(divergent_hcl(7,"Red-Green")) # colors
)
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c(-3:3), # breaks, clipped
rev(diverging_hcl(7,"Red-Green")) # colors
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16]+2, # +2 for visualisation purposes
col=tfs_expr_hm_col,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns()
)
draw(plei_expr_zsco_hm)
c(-1.5:3)
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c(c(-1.5:3),3), # breaks, clipped
rev(diverging_hcl(6,"Red-Green")) # colors
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16]+2, # +2 for visualisation purposes
col=tfs_expr_hm_col,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns()
)
draw(plei_expr_zsco_hm)
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c( # breaks, clipped
seq(-1,0,len=5),
seq(0,4,len=5)
),
rev(sequential_hcl(10,"YGnBu", rev = TRUE)) # colors
)
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c( # breaks, clipped
seq(-1,0,len=5),
seq(0,4,len=5)
),
rev(sequential_hcl(10,"YGnBu")) # colors
)
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c( # breaks, clipped
seq(-1,0,len=5),
seq(0,4,len=5)
),
rev(sequential_hcl(10,"YlGnBu")) # colors
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16]+2, # +2 for visualisation purposes
col=tfs_expr_hm_col,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns()
)
draw(plei_expr_zsco_hm)
# Color palette for heatmap of expression
tfs_expr_hm_col <- colorRamp2(
c( # breaks, clipped
seq(0,4,len=10)
),
rev(sequential_hcl(10,"YlGnBu")) # colors
)
plei_expr_zsco_hm <- Heatmap(
name="norm\nexpr",
pfla_tfs_rna_dev[,1:16]+2, # +2 for visualisation purposes
col=tfs_expr_hm_col,
show_row_names = FALSE,
show_column_names = FALSE,
cluster_rows=T,
clustering_method_rows = "ward.D2",
cluster_columns=F,
top_annotation=devstages_ha_columns()
)
draw(plei_expr_zsco_hm)
draw(plei_cor_hm + plei_expr_zsco_hm)
library(dplyr)
pfla_tfs_rna_dev_topclass <-
merge(
pfla_tfs_rna_dev,
pfla_tfs,
by.x = 0,
by.y = 1,
) %>%
column_to_rownames("Row.names") %>%
filter(class %in% pfla_tfs_mainclasses)
library(tidyr)
pfla_tfs_rna_dev_topclass <-
merge(
pfla_tfs_rna_dev,
pfla_tfs,
by.x = 0,
by.y = 1,
) %>%
column_to_rownames("Row.names") %>%
filter(class %in% pfla_tfs_mainclasses)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
dir <- '/home/ska/aperpos/projects/ptychodera_cisreg_development/'
fcha <- function(){ gsub("-","",Sys.Date()) }
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = dir)
options(scipen=999)
Sys.setenv(VROOM_CONNECTION_SIZE=5000072)
library(DESeq2)
library(ComplexHeatmap)
library(circlize)
library(topGO)
library(dplyr)
library(DESeq2)
library(ComplexHeatmap)
library(circlize)
library(topGO)
library(tidyverse)
library(ComplexHeatmap)
library(circlize)
library(topGO)
library(tidyverse)
library(ComplexHeatmap)
library(circlize)
library(topGO)
library(tidyverse)
